/* eslint-env node */
{
  "root": true,
  "extends": [
    "plugin:vue/vue3-essential",
    "eslint:recommended",
    "@vue/eslint-config-typescript/recommended",
    "@vue/eslint-config-prettier"
  ],
  "env": {
    "vue/setup-compiler-macros": true
  },
  "rules": {
    "no-console": 1,
    "max-len": [
      "error",
      {
        "code": 200,
        "ignoreStrings": true,
        "ignoreComments": true
      }
    ],
    "array-element-newline": [
      "error",
      {
        "ArrayExpression": "consistent",
        "ArrayPattern": {
          "minItems": 3
        }
      }
    ],
    "object-curly-newline": "off",
    "@typescript-eslint/explicit-function-return-type": ["error"],
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": ["error"],
    "@typescript-eslint/no-empty-interface": ["error"],
    "@typescript-eslint/no-explicit-any": ["error"],
    "@typescript-eslint/default-param-last": ["error"],
    "prefer-destructuring": [
      "error",
      {
        "object": true,
        "array": true
      }
    ],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": {
          "memberTypes": [
            // index signature
            "signature",
            // fields
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-decorated-field",
            "protected-decorated-field",
            "private-decorated-field",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-abstract-field",
            "protected-abstract-field",
            "private-abstract-field",
            "public-field",
            "protected-field",
            "private-field",
            "static-field",
            "instance-field",
            "abstract-field",
            "decorated-field",
            "field",
            // constructors
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "constructor",
            // getters
            "public-static-get",
            "protected-static-get",
            "private-static-get",
            "public-decorated-get",
            "protected-decorated-get",
            "private-decorated-get",
            "public-instance-get",
            "protected-instance-get",
            "private-instance-get",
            "public-abstract-get",
            "protected-abstract-get",
            "private-abstract-get",
            "public-get",
            "protected-get",
            "private-get",
            "static-get",
            "instance-get",
            "abstract-get",
            "decorated-get",
            "get",
            // setters
            "public-static-set",
            "protected-static-set",
            "private-static-set",
            "public-decorated-set",
            "protected-decorated-set",
            "private-decorated-set",
            "public-instance-set",
            "protected-instance-set",
            "private-instance-set",
            "public-abstract-set",
            "protected-abstract-set",
            "private-abstract-set",
            "public-set",
            "protected-set",
            "private-set",
            "static-set",
            "instance-set",
            "abstract-set",
            "decorated-set",
            "set",
            // methods
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-decorated-method",
            "protected-decorated-method",
            "private-decorated-method",
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method",
            "public-abstract-method",
            "protected-abstract-method",
            "private-abstract-method",
            "public-method",
            "protected-method",
            "private-method",
            "static-method",
            "instance-method",
            "abstract-method",
            "decorated-method",
            "method"
          ],
          "order": "alphabetically-case-insensitive"
        }
      }
    ],
    "sort-imports": [
      "warn",
      {
        "allowSeparatedGroups": true,
        "ignoreCase": true
      }
    ]
  }
}
